name: Docker Image CI for GHCR

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION_EXPRESSION: v[0-9]+\.[0-9]+\.[0-9]+
on:
  workflow_dispatch:
    inputs:
      version:
        description: Specify the version of the package ( in format v*.*.* )
        type: string
        required: true
  push:
    tags:
      - ${{ env.VERSION_EXPRESSION }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Determine Docker tag
        id: determine_tag
        run: |
            if [[ "${{ github.ref_name }}" =~ ^${{ env.VERSION_EXPRESSION }}$ ]]; then
              echo "::set-output name=tag::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"
              echo "Using push tag version: ${{ github.ref_name }}"
            elif [[ "${{ github.event.inputs.version }}" =~ ^${{ env.VERSION_EXPRESSION }}$ ]]; then
              echo "::set-output name=tag::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}"
              echo "Using input version : ${{ github.event.inputs.version }}"
            else
              echo "Neither tag version nor input versions are available"
            fi

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: |
            ${{ steps.determine_tag.outputs.tag}}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
